/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-09-19 06:59:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.tap.model.User;
import com.tap.model.Cart;
import com.tap.model.CartItem;
import java.util.Map;

public final class confirmOrder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("com.tap.model.Cart");
    _jspx_imports_classes.add("com.tap.model.CartItem");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("com.tap.model.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    User user = (User) session.getAttribute("loggedInUser");
    if (user == null) {
        response.sendRedirect("login.jsp?redirect=confirmOrder.jsp");
        return;
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Order Confirmation</title>\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles/confirmorder.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h2>Order Confirmation</h2>\r\n");
      out.write("        ");

        Cart cart = (Cart) session.getAttribute("cart");
        if (cart != null && !cart.getItems().isEmpty()) {
            double total = 0.0;
        
      out.write("\r\n");
      out.write("        <div class=\"order-summary\">\r\n");
      out.write("            <h3>Order Summary</h3>\r\n");
      out.write("            ");

            for (Map.Entry<Integer, CartItem> entry : cart.getItems().entrySet()) {
                CartItem item = entry.getValue();
                double itemSubtotal = item.getSubtotal();
                total += itemSubtotal;
            
      out.write("\r\n");
      out.write("            <div class=\"order-item\">\r\n");
      out.write("                <p>\r\n");
      out.write("                    <strong>Item:</strong> ");
      out.print( item.getName() );
      out.write("<br/>\r\n");
      out.write("                    <strong>Quantity:</strong> ");
      out.print( item.getQuantity() );
      out.write("<br/>\r\n");
      out.write("                    <strong>Price:</strong> Rs.");
      out.print( item.getPrice() );
      out.write("<br/>\r\n");
      out.write("                    <strong>Subtotal:</strong> Rs.");
      out.print( itemSubtotal );
      out.write("\r\n");
      out.write("                </p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <hr/>\r\n");
      out.write("            ");

            }
            
      out.write("\r\n");
      out.write("            <h3>Total: Rs.");
      out.print( total );
      out.write("</h3>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"shipping-info\">\r\n");
      out.write("            <h3>Shipping Information</h3>\r\n");
      out.write("            <p><strong>Name:</strong> ");
      out.print( request.getParameter("name") );
      out.write("</p>\r\n");
      out.write("            <p><strong>Address:</strong> ");
      out.print( request.getParameter("address") );
      out.write("</p>\r\n");
      out.write("            <p><strong>Phone:</strong> ");
      out.print( request.getParameter("phone") );
      out.write("</p>\r\n");
      out.write("            <p><strong>Payment Method:</strong> ");
      out.print( request.getParameter("payment") );
      out.write("</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <form action=\"confirmOrder\" method=\"post\" class=\"confirmation-form\">\r\n");
      out.write("            <input type=\"hidden\" name=\"total\" value=\"");
      out.print( total );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"name\" value=\"");
      out.print( request.getParameter("name") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"address\" value=\"");
      out.print( request.getParameter("address") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"phone\" value=\"");
      out.print( request.getParameter("phone") );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"payment\" value=\"");
      out.print( request.getParameter("payment") );
      out.write("\">\r\n");
      out.write("            <input type=\"submit\" value=\"OK\" class=\"submit-btn\">\r\n");
      out.write("        </form>\r\n");
      out.write("        ");

        } else {
        
      out.write("\r\n");
      out.write("        <p>Your cart is empty.</p>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
